[{"C:\\Users\\offic\\Coding\\SafeRoute\\src\\index.js":"1","C:\\Users\\offic\\Coding\\SafeRoute\\src\\App.js":"2","C:\\Users\\offic\\Coding\\SafeRoute\\src\\reportWebVitals.js":"3","C:\\Users\\offic\\Coding\\SafeRoute\\src\\components\\SearchField\\Search.js":"4","C:\\Users\\offic\\Coding\\SafeRoute\\src\\components\\Navbar\\index.js":"5"},{"size":500,"mtime":1610068666019,"results":"6","hashOfConfig":"7"},{"size":1061,"mtime":1610068666008,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1610068666019,"results":"9","hashOfConfig":"7"},{"size":3529,"mtime":1610069013371,"results":"10","hashOfConfig":"7"},{"size":8729,"mtime":1610069396381,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1co5747",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\offic\\Coding\\SafeRoute\\src\\index.js",[],["24","25"],"C:\\Users\\offic\\Coding\\SafeRoute\\src\\App.js",[],"C:\\Users\\offic\\Coding\\SafeRoute\\src\\reportWebVitals.js",[],"C:\\Users\\offic\\Coding\\SafeRoute\\src\\components\\SearchField\\Search.js",["26"],"import React from 'react';\nimport '../SearchField/Search.css';\nimport axios from 'axios';\n\nclass Search extends React.Component {\n\n    constructor( props ) {\n        super( props);\n\n        this.state = {\n            query: '',\n            results: {},\n            loading: false,\n            message: ''\n        }\n        //variable to start cancel token\n        this.cancel = '';\n    }\n\n    //fetching query results from refuge restroom api\n    fetchSearchResults = ( updatedPageNo = '', _query ) => {\n    //  const pageNumber = updatedPageNo ? `page=1${updatedPageNo}` : '';\n       const searchURL = `https://www.refugerestrooms.org/api/v1/restrooms/search?page=1&per_page=20&offset=0&unisex=true&query=Texas` ; \n\n       // if statement for cancel token \n        if( this.cancel ) {\n            this.cancel.cancel();\n        }\n        // creates new stoke\n        this.cancel = axios.CancelToken.source();\n\n        axios.get( searchURL, {\n            cancelToken: this.cancel.token\n        } )\n\n        .then( res => {\n            const resultNotFoundMsg = ! res.data.length\n                                    ? 'There are no more search results. Try a new search'\n                                        : '';\n                                        this.setState( {\n                                            results: res.data,\n                                            message: resultNotFoundMsg,\n                                            loading: false\n                                        })\n\n\n\n\n            //Displaying API data\n            // console.warn( res );\n        } )\n        .catch( error => {\n            if (axios.isCancel(error) || error ) {\n                this.setState({\n                    loading: false,\n                    message: 'Failed to fetch data. Check network'\n                })\n            }\n        })\n    };\n//Method to handle user input\nhandleOnInputChange = ( event ) => {\n    //stores query/user input\n    const query = event.target.value;\n    this.setState( { query: query, loading: true, message: '' }, () => {\n        this.fetchSearchResults( 1, query );\n    } );\n};\n\n\n\n// Method to display search results\n// Pulls results out of state\n\n\n   renderSearchResults = () => {\n    \nconst { results } = this.state;\n\nif ( Object.keys( results ).length && results.length ) {\n return (\n <div className=\"results-container\">\n     { results.map( result => {\n         return (\n             <a key={ result.id } href={ result.name } className=\"result-item\">\n                <h6 className=\"image-name\">{result.name}</h6>\n                <div className=\"image-wrapper\">\n                    <img className=\"image\" src={ result.name } alt={`${result.name}`}/>\n                </div>\n             </a>\n         )\n     })}\n </div>\n )\n    }\n   };\n \n\n\n\n render () {\n     const { query } = this.state;\n     console.warn( this.state );\n     return (\n         <div className=\"container\">\n  {/* Heading*/}\n  <h2 className=\"heading\"></h2>\n   {/* Search Input*/}\n   <label className=\"search-label\" htmlFor=\"search-input\">\n   <input\n                    type=\"text\"\n                    name=\"query\"\n                    value={query}\n                    id=\"search-input\"\n                    placeholder=\"Search...\"\n                // Calling function for what user types\n                    onChange={this.handleOnInputChange}\n                    />\n<i className=\"fas fa-search search-icon\"></i>\n   </label>\n\n\n{ this.renderSearchResults() } \n         </div>\n         )\n     }\n}\n    export default Search","C:\\Users\\offic\\Coding\\SafeRoute\\src\\components\\Navbar\\index.js",["27","28"],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":107,"column":3,"nodeType":"35","endLine":107,"endColumn":27},{"ruleId":"36","severity":1,"message":"37","line":70,"column":14,"nodeType":"38","messageId":"39","endLine":70,"endColumn":19},{"ruleId":"36","severity":1,"message":"40","line":110,"column":14,"nodeType":"38","messageId":"39","endLine":110,"endColumn":22},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-unused-vars","'login' is defined but never used.","Identifier","unusedVar","'register' is defined but never used.","no-global-assign","no-unsafe-negation"]