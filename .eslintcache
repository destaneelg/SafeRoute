[{"C:\\Users\\offic\\Coding\\SafeRoute\\src\\index.js":"1","C:\\Users\\offic\\Coding\\SafeRoute\\src\\App.js":"2","C:\\Users\\offic\\Coding\\SafeRoute\\src\\reportWebVitals.js":"3","C:\\Users\\offic\\Coding\\SafeRoute\\src\\components\\SearchField\\Search.js":"4","C:\\Users\\offic\\Coding\\SafeRoute\\src\\components\\Navbar\\index.js":"5"},{"size":500,"mtime":1610068666019,"results":"6","hashOfConfig":"7"},{"size":1061,"mtime":1610068666008,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1610068666019,"results":"9","hashOfConfig":"7"},{"size":3529,"mtime":1610071247417,"results":"10","hashOfConfig":"7"},{"size":8729,"mtime":1610069396381,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1co5747",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"C:\\Users\\offic\\Coding\\SafeRoute\\src\\index.js",[],["24","25"],"C:\\Users\\offic\\Coding\\SafeRoute\\src\\App.js",[],"C:\\Users\\offic\\Coding\\SafeRoute\\src\\reportWebVitals.js",[],"C:\\Users\\offic\\Coding\\SafeRoute\\src\\components\\SearchField\\Search.js",["26"],"C:\\Users\\offic\\Coding\\SafeRoute\\src\\components\\Navbar\\index.js",["27","28"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\"\nimport SearchField from \"../SearchField/Search\";\n\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Navbar() {\n//CSS for SearchFiled\n  const style2 ={\n    backgroundPosition: \"center\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    minHeight: \"80vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    \n  }\n//About Prompt Functions =========================================================================\n\n  function CustomAlert() {\n    this.render = function (){\n\n      var winW = window.innerWidth;\n      var winH = window.innerHeight;\n      var dialogoverlay = document.getElementById('dialogoverlay');\n      var dialogbox = document.getElementById('dialogbox');\n      dialogoverlay.style.display = \"block\";\n      dialogoverlay.style.height = winH + \"px\";\n      dialogbox.style.left = (winW/2) -(550 * .5) + \"px\";\n      dialogbox.style.top = \"100px\";\n      dialogbox.style.display=\"block\";\n      document.getElementById('dialogboxhead').innerHTML = \"About SafeRoute\";\n      document.getElementById('dialogboxbody').innerHTML = \"SafeRoute is a search engine that allows you to search for non-gender conforming restrooms. We recognize an opportunity to help transgender people find places to comfortably utilize public restrooms without the threat of harassment. In addition, this service is beneficial for those attending to children or people people with disabilities.\";\n\n      document.getElementById('searchfield').style.display = 'none';\n    }\n   \n  }\n    function close () {\n      document.getElementById('dialogbox').style.display = 'none';\n      document.getElementById('dialogoverlay').style.display = 'none';\n      document.getElementById('searchfield').style.display = 'flex';\n    }\n    var Alert = new CustomAlert();\n\n//Sign In Prompt Functions============================================================\n  \n    function SignIn() {\n      this.render = function (){\n  \n        var winW = window.innerWidth;\n        var winH = window.innerHeight;\n        var dialogoverlay = document.getElementById('dialogoverlay');\n        var signIn = document.getElementById('signin');\n        dialogoverlay.style.display = \"block\";\n        dialogoverlay.style.height = winH + \"px\";\n        signIn.style.left = (winW/2) -(550 * .5) + \"px\";\n        signIn.style.top = \"100px\";\n        signIn.style.display=\"block\";\n        document.getElementById('signinhead').innerHTML = \"Sign In\";\n        document.getElementById('searchfield').style.display = 'none';\n      }\n    }\n\n    function login () {\n      document.getElementById('signin').style.display = 'none';\n      document.getElementById('dialogoverlay').style.display = 'none';\n      document.getElementById('searchfield').style.display = 'flex';\n    }\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [lastname, setLastname] = useState(\"\");\n    const [firstname, setFirstname] = useState(\"\");\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  }\n\n    \n    var signIn = new SignIn();\n\n//Sign Up Prompt Functions==============================================================================\n\n    function SignUp() {\n      this.render = function (){\n  \n        var winW = window.innerWidth;\n        var winH = window.innerHeight;\n        var dialogoverlay = document.getElementById('dialogoverlay');\n        var signUp = document.getElementById('signUp');\n        dialogoverlay.style.display = \"block\";\n        dialogoverlay.style.height = winH + \"px\";\n        signUp.style.left = (winW/2) -(550 * .5) + \"px\";\n        signUp.style.top = \"100px\";\n        signUp.style.display=\"block\";\n        document.getElementById('searchfield').style.display = 'none';\n      }\n    \n    }\n\n    function register () {\n      document.getElementById('signUp').style.display = 'none';\n      document.getElementById('dialogoverlay').style.display = 'none';\n      document.getElementById('searchfield').style.display = 'flex';\n    }\n    \n    var signUp = new SignUp();\n//React HTML portion =================================================================================================================================\n  return (\n    <div>\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      \n      <div>\n        <ul className=\"navbar-nav\">\n\n        <Link className=\"navbar-brand\" to=\"/\" id= \"title\" style = {{color: \"black\", fontSize: \"240%\", textDecoration: \"none\", fontWeight: \"bold\"}}>\n        Safe Route\n        </Link>\n            <Link\n              to=\"/about\" id = \"about\"\n              className={window.location.pathname === \"/about\" ? \"nav-link active\" : \"nav-link\"}\n              style = {{fontSize: \"80%\", textDecoration: \"none\"}} onClick= {Alert.render}\n            >\n              About\n            </Link>\n            <Link\n              to=\"/\" id = \"signup\"\n              className={\n                window.location.pathname === \"/\" || window.location.pathname === \"/home\"\n                  ? \"nav-link active\"\n                  : \"nav-link\"\n              }\n            style = {{fontSize: \"80%\", textDecoration: \"none\"}} onClick={signUp.render}\n            >\n              Sign Up\n            </Link>\n            <Link\n              to=\"/signIn\" id = \"signIn\"\n              className={window.location.pathname === \"/signIn\" ? \"nav-link active\" : \"nav-link\"}\n              style = {{fontSize: \"80%\", textDecoration: \"none\"}} onClick= {signIn.render}\n            >\n              Sign In\n            </Link>\n            <div id=\"note\" style={{fontStyle:\"italic\", color: \"black\", fontWeight: \"bold\"}}>\n              or\n            </div>\n        </ul>\n      </div>\n      \n    </nav>\n    \n    <div id =\"dialogoverlay\"></div>\n      <div id= \"dialogbox\">\n        <div>\n          <div id =\"dialogboxhead\"></div>\n          <div id =\"dialogboxbody\"></div>\n          <div id =\"dialogboxfoot\">\n            <button onClick={close}>Close</button>\n          </div>\n        </div>\n      </div>\n      <div className=\"Login\" id= \"signin\">\n      <div id =\"signinhead\"></div>\n          <div id =\"signinbody\">\n      <Form onSubmit={handleSubmit}>\n        <Form.Group size=\"lg\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group size=\"lg\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n          Login\n        </Button>\n      </Form>\n      </div>\n    </div>\n      <div className=\"sigin\" id= \"signUp\">\n      <div id =\"signinhead\"></div>\n          <div id =\"signinbody\">\n          <Form.Group size=\"lg\" controlId=\"fname\">\n          <Form.Label>First Name</Form.Label>\n          <Form.Control\n            type=\"firstname\"\n            value={firstname}\n            onChange={(e) => setFirstname(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group size=\"lg\" controlId=\"lastname\">\n          <Form.Label>Last name</Form.Label>\n          <Form.Control\n            type=\"lastname\"\n            value={lastname}\n            onChange={(e) => setLastname(e.target.value)}\n          />\n        </Form.Group>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group size=\"lg\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            autoFocus\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group size=\"lg\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        \n        <Button  id=\"signupfoot\" block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n          Login\n        </Button>\n      </Form>\n      </div>\n    </div>\n     \n      <div style={style2} id = \"searchfield\">\n        <SearchField />\n      </div>\n   \n    </div>\n  );\n}\n\nexport default Navbar;\n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":107,"column":3,"nodeType":"35","endLine":107,"endColumn":27},{"ruleId":"36","severity":1,"message":"37","line":70,"column":14,"nodeType":"38","messageId":"39","endLine":70,"endColumn":19},{"ruleId":"36","severity":1,"message":"40","line":110,"column":14,"nodeType":"38","messageId":"39","endLine":110,"endColumn":22},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-unused-vars","'login' is defined but never used.","Identifier","unusedVar","'register' is defined but never used.","no-global-assign","no-unsafe-negation"]